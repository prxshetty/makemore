# -*- coding: utf-8 -*-
"""makemore_from_scratch.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1E03IBqOWgaIxceadULytAlsknI9u-IuB
"""

words=open('names.txt', 'r').read().splitlines()

words[:10]

len(words)

min(len(w) for w in words)

max(len(w) for w in words)

b = {}

for w in words:
  chs = ['<S>']+list(w) + ['<E>']
  for ch1, ch2 in zip(chs, chs[1:]):
    bigram=(ch1, ch2)
    b[bigram]=b.get(bigram, 0)+1
    # print(ch1, ch2)

sorted(b.items(), key=lambda kv: -kv[1])

import torch

N=torch.zeros((27,27), dtype=torch.int32)

chars=sorted(list(set(''.join(words))))
stoi={s:i+1 for i, s in enumerate(chars)}
stoi['.']=0
itos={i: s for s, i in stoi.items()}

for w in words:
  chs = ['.']+list(w) + ['.']
  for ch1, ch2 in zip(chs, chs[1:]):
    ix1=stoi[ch1]
    ix2=stoi[ch2]
    N[ix1, ix2]+=1

    # print(ch1, ch2)

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
# %matplotlib inline

plt.figure(figsize=(16,16))
plt.imshow(N, cmap="Blues")
for i in range(27):
  for j in range(27):
    chstr=itos[i] + itos[j]
    plt.text(j, i, chstr, ha='center', va='bottom', color='gray')
    plt.text(j, i, N[i,j].item(), ha='center', va='top', color='gray')
plt.axis('off')

N[0]

p=N[0].float()
p=p/p.sum()
p

g=torch.Generator().manual_seed(2147483647)
ix=torch.multinomial(p, num_samples=1, replacement=True, generator=g).item()
itos[ix]

g=torch.Generator().manual_seed(2147483647)
p=torch.rand(3, generator=g)
p=p/p.sum()
p

torch.multinomial(p, num_samples=20, replacement=True, generator=g)

g=torch.Generator().manual_seed(2147483647)

for i in range(10):
  ix=0
  out=[]
  while True:
    p=N[ix].float()
    p=p/p.sum()
    ix=torch.multinomial(p, num_samples=1, replacement=True, generator=g).item()
    out.append(itos[ix])
    # print(itos[ix])
    if ix==0:
      break
  print(''.join(out))

